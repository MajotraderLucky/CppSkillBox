Конечно,  вот пример функции, которая преобразует возвращаемое значение функции `containsDigitsAndDot` в число типа `double`:

```cpp
double convertToDouble(const std::string& input) {
    if (input.empty()) {
        // Пустая строка не может быть преобразована в число.
        // В данном случае можно выбросить исключение, вернуть значение по умолчанию или сделать что-то другое в зависимости от конкретных требований.
        // В данном примере вернем 0.
        return 0.0;
    }
    
    try {
        return std::stod(input);
    } catch (const std::exception& e) {
        // Произошла ошибка преобразования строки в число.
        // В данном случае можно выбросить исключение, вернуть значение по умолчанию или сделать что-то другое в зависимости от конкретных требований.
        // В данном примере вернем 0.
        return 0.0;
    }
}
```

Вы можете использовать эту функцию для преобразования результата `containsDigitsAndDot` следующим образом:

```cpp
std::string result = containsDigitsAndDot("3.14");
double value = convertToDouble(result);
// в данном случае значение переменной value будет равно 3.14
```

Обратите внимание, что в этом примере ошибки преобразования строки в число просто возвращают ноль. В реальном коде вам может понадобиться предпринять другие действия, такие как выброс исключения или возврат значений по умолчанию.